"use client";

/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */
/* eslint-disable */

import type {
  EventName,
  StencilReactComponent,
} from "@stencil/react-output-target/runtime";
import { createComponent } from "@stencil/react-output-target/runtime";

import {
  LiciousButton as LiciousButtonElement,
  defineCustomElement as defineLiciousButton,
} from "@licious/web-components/dist/components/licious-button";
import {
  LiciousIconButton as LiciousIconButtonElement,
  defineCustomElement as defineLiciousIconButton,
} from "@licious/web-components/dist/components/licious-icon-button.js";
import {
  LiciousIcon as LiciousIconElement,
  defineCustomElement as defineLiciousIcon,
} from "@licious/web-components/dist/components/licious-icon.js";
import {
  LiciousInput as LiciousInputElement,
  defineCustomElement as defineLiciousInput,
} from "@licious/web-components/dist/components/licious-input.js";
import {
  LiciousMenuButton as LiciousMenuButtonElement,
  defineCustomElement as defineLiciousMenuButton,
} from "@licious/web-components/dist/components/licious-menu-button.js";
import {
  LiciousPanel as LiciousPanelElement,
  defineCustomElement as defineLiciousPanel,
} from "@licious/web-components/dist/components/licious-panel.js";
import {
  LiciousSelect as LiciousSelectElement,
  defineCustomElement as defineLiciousSelect,
} from "@licious/web-components/dist/components/licious-select.js";
import {
  LiciousToolbarButton as LiciousToolbarButtonElement,
  defineCustomElement as defineLiciousToolbarButton,
} from "@licious/web-components/dist/components/licious-toolbar-button.js";
import {
  LiciousListItem as LiciousListItemElement,
  defineCustomElement as defineLiciousListItem,
} from "@licious/web-components/dist/components/licious-list-item.js";
import React from "react";

type LiciousListItemEvents = NonNullable<unknown>;
export const LiciousListItem: StencilReactComponent<
  LiciousListItemElement,
  LiciousListItemEvents
> = /*@__PURE__*/ createComponent<
  LiciousListItemElement,
  LiciousListItemEvents
>({
  tagName: "licious-list-item",
  elementClass: LiciousListItemElement,
  // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
  react: React,
  events: {} as LiciousListItemEvents,
  defineCustomElement: defineLiciousListItem,
});

type LiciousButtonEvents = NonNullable<unknown>;

export const LiciousButton: StencilReactComponent<
  LiciousButtonElement,
  LiciousButtonEvents
> = /*@__PURE__*/ createComponent<LiciousButtonElement, LiciousButtonEvents>({
  tagName: "licious-button",
  elementClass: LiciousButtonElement,
  // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
  react: React,
  events: {} as LiciousButtonEvents,
  defineCustomElement: defineLiciousButton,
});

type LiciousIconEvents = NonNullable<unknown>;

export const LiciousIcon: StencilReactComponent<
  LiciousIconElement,
  LiciousIconEvents
> = /*@__PURE__*/ createComponent<LiciousIconElement, LiciousIconEvents>({
  tagName: "licious-icon",
  elementClass: LiciousIconElement,
  // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
  react: React,
  events: {} as LiciousIconEvents,
  defineCustomElement: defineLiciousIcon,
});

type LiciousIconButtonEvents = NonNullable<unknown>;

export const LiciousIconButton: StencilReactComponent<
  LiciousIconButtonElement,
  LiciousIconButtonEvents
> = /*@__PURE__*/ createComponent<
  LiciousIconButtonElement,
  LiciousIconButtonEvents
>({
  tagName: "licious-icon-button",
  elementClass: LiciousIconButtonElement,
  // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
  react: React,
  events: {} as LiciousIconButtonEvents,
  defineCustomElement: defineLiciousIconButton,
});

type LiciousInputEvents = { onChanged: EventName<CustomEvent<string>> };

export const LiciousInput: StencilReactComponent<
  LiciousInputElement,
  LiciousInputEvents
> = /*@__PURE__*/ createComponent<LiciousInputElement, LiciousInputEvents>({
  tagName: "licious-input",
  elementClass: LiciousInputElement,
  // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
  react: React,
  events: { onChanged: "changed" } as LiciousInputEvents,
  defineCustomElement: defineLiciousInput,
});

type LiciousMenuButtonEvents = NonNullable<unknown>;

export const LiciousMenuButton: StencilReactComponent<
  LiciousMenuButtonElement,
  LiciousMenuButtonEvents
> = /*@__PURE__*/ createComponent<
  LiciousMenuButtonElement,
  LiciousMenuButtonEvents
>({
  tagName: "licious-menu-button",
  elementClass: LiciousMenuButtonElement,
  // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
  react: React,
  events: {} as LiciousMenuButtonEvents,
  defineCustomElement: defineLiciousMenuButton,
});

type LiciousPanelEvents = NonNullable<unknown>;

export const LiciousPanel: StencilReactComponent<
  LiciousPanelElement,
  LiciousPanelEvents
> = /*@__PURE__*/ createComponent<LiciousPanelElement, LiciousPanelEvents>({
  tagName: "licious-panel",
  elementClass: LiciousPanelElement,
  // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
  react: React,
  events: {} as LiciousPanelEvents,
  defineCustomElement: defineLiciousPanel,
});

type LiciousSelectEvents = NonNullable<unknown>;

export const LiciousSelect: StencilReactComponent<
  LiciousSelectElement,
  LiciousSelectEvents
> = /*@__PURE__*/ createComponent<LiciousSelectElement, LiciousSelectEvents>({
  tagName: "licious-select",
  elementClass: LiciousSelectElement,
  // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
  react: React,
  events: {} as LiciousSelectEvents,
  defineCustomElement: defineLiciousSelect,
});

type LiciousToolbarButtonEvents = NonNullable<unknown>;

export const LiciousToolbarButton: StencilReactComponent<
  LiciousToolbarButtonElement,
  LiciousToolbarButtonEvents
> = /*@__PURE__*/ createComponent<
  LiciousToolbarButtonElement,
  LiciousToolbarButtonEvents
>({
  tagName: "licious-toolbar-button",
  elementClass: LiciousToolbarButtonElement,
  // @ts-ignore - React type of Stencil Output Target may differ from the React version used in the Nuxt.js project, this can be ignored.
  react: React,
  events: {} as LiciousToolbarButtonEvents,
  defineCustomElement: defineLiciousToolbarButton,
});
